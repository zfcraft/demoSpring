<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 开启自动代理, 注解方式才需要开启 -->
	<!-- <aop:aspectj-autoproxy /> -->
	
	<!-- 配置切面类 bean -->
	<bean id="myAop" class="com.zlk.aop.MyAop"></bean>
	<!-- 配置目标类 bean -->
	<bean id="myService" class="com.zlk.service.impl.MyServiceImpl"></bean>
	
	<!-- aop 配置 -->
	<aop:config>
		<!-- 自定义切入点 -->
		<aop:pointcut expression="execution(* *..*.before(..))" id="anyMethod"/>
		
		<aop:aspect ref="myAop">
			<!-- 前置通知 -->
			<!-- 测试自定义切入点 -->
			<aop:before method="beforeAdvice" pointcut-ref="anyMethod"/>
			<!-- 最终通知 -->
			<aop:after method="afterAdvice" pointcut="execution(* *..*.after(..))"/>
			<!-- 后置通知 -->
			<aop:after-returning method="afterReturningAdvice" pointcut="execution(* *..*.afterReturning(..))"/>
			<!-- 环绕通知 -->
			<aop:around method="aroundAdvice" pointcut="execution(* *..*.around(..))"/>
			<!-- 异常抛出通知 -->
			<aop:after-throwing method="afterThrowingAdvice" pointcut="execution(* *..*.afterThrowing(..))"/>
		</aop:aspect>
	</aop:config>
</beans>
